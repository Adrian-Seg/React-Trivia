[{"D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\index.js":"1","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\App.js":"2","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\reportWebVitals.js":"3","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\TriviaBoard\\TriviaBoard.js":"4","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\ImportedButton\\ImportedButton.js":"5","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\questions\\questions.js":"6","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\MainMenu\\MainMenu.js":"7","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\MainMenuBtn\\MainMenuBtn.js":"8","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\Options\\Options.js":"9","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\Clock\\Clock.js":"10","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\EndGame\\EndGame.js":"11","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\StartOver\\StartOver.js":"12"},{"size":547,"mtime":1610395058547,"results":"13","hashOfConfig":"14"},{"size":217,"mtime":1613158569077,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":5815,"mtime":1613338136117,"results":"17","hashOfConfig":"14"},{"size":916,"mtime":1613335015922,"results":"18","hashOfConfig":"14"},{"size":41646,"mtime":1611951779808,"results":"19","hashOfConfig":"14"},{"size":3967,"mtime":1613337953139,"results":"20","hashOfConfig":"14"},{"size":1157,"mtime":1613335002344,"results":"21","hashOfConfig":"14"},{"size":1710,"mtime":1613336162257,"results":"22","hashOfConfig":"14"},{"size":1368,"mtime":1613339502626,"results":"23","hashOfConfig":"14"},{"size":904,"mtime":1613093588535,"results":"24","hashOfConfig":"14"},{"size":476,"mtime":1613338336885,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"kj0izs",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\index.js",[],["56","57"],"D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\App.js",[],"D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\reportWebVitals.js",[],"D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\TriviaBoard\\TriviaBoard.js",["58"],"import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport ImportedButton from '../../components/ImportedButton/ImportedButton';\r\nimport { Questions } from '../questions/questions';\r\n\r\n// Current index is the position in the array of Questions (Question Number)\r\nlet currentIndex = 0;\r\n\r\nclass TriviaBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question: \"\",\r\n            option1: \"\",\r\n            option2: \"\",\r\n            option3: \"\",\r\n            option4: \"\",\r\n            realAnswer: \"\",\r\n            score: 0,\r\n            timer: 30,\r\n            playActive: true,\r\n\r\n            gameTimer: 0,\r\n        };\r\n    }\r\n\r\n    checkAnswer = (userSelected) => {\r\n        // Conditional to check if the users choice is the real answer, to add a point\r\n        if (userSelected === this.props.triviaArray[currentIndex].answer) {\r\n            this.setState({\r\n                score: this.state.score++,\r\n            })\r\n        }\r\n        // Calling next question function\r\n        this.nextQuestion();\r\n    }\r\n\r\n    nextQuestion = () => {\r\n        // Move to the next question\r\n        currentIndex++;\r\n        // Checking if the questions get to 20, to end game\r\n        if (currentIndex === 20) {\r\n            this.endGame();\r\n            this.setState({ playActive: false });\r\n        } else {\r\n            this.setState({\r\n                question: Questions[currentIndex].question,\r\n                option1: Questions[currentIndex].option1,\r\n                option2: Questions[currentIndex].option2,\r\n                option3: Questions[currentIndex].option3,\r\n                option4: Questions[currentIndex].option4,\r\n                realAnswer: Questions[currentIndex].answer,\r\n                score: this.state.score,\r\n                timer: 30,\r\n            })\r\n        }\r\n    }\r\n\r\n    endGame() {\r\n        this.setState({\r\n            question: \"\",\r\n            option1: \"\",\r\n            option2: \"\",\r\n            option3: \"\",\r\n            option4: \"\",\r\n            realAnswer: \"\",\r\n            score: this.state.score,\r\n            timer: \"30\",\r\n        })\r\n    }\r\n\r\n    // resetGame = () => {\r\n    //     this.setState({\r\n    //         question: \"\",\r\n    //         option1: \"\",\r\n    //         option2: \"\",\r\n    //         option3: \"\",\r\n    //         option4: \"\",\r\n    //         realAnswer: \"\",\r\n    //         score: 0,\r\n    //         timer: 30,\r\n    //     })\r\n    // }\r\n\r\n    finalScore = () => {\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1>\r\n                                End of Game friend! Your Score: {this.state.score}\r\n                            </h1>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    };\r\n\r\n    playArea = () => {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"d-flex justify-content-center optionsBG stats\">\r\n                                {/* Adding + 1 because the array starts at 0 */}\r\n                                <h1>Question {currentIndex + 1} / 20</h1>\r\n                            </Col>\r\n                            <Col className=\"d-flex justify-content-center optionsBG stats\">\r\n                                <h1>Score: {this.state.score}</h1>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"d-flex justify-content-center optionsBG stats\">\r\n                                <h1>Time Left: {this.state.timer}</h1>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <Container>\r\n                        <Row className=\"questArea optionsBG\">\r\n                            <Col xs={10} className=\"d-flex justify-content-center optionsBG\">\r\n                                <h1> {this.props.triviaArray[currentIndex].question} </h1>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"d-flex justify-content-around\">\r\n                                <ImportedButton onClick={this.checkAnswer} value={this.props.triviaArray[currentIndex].option1} />\r\n                                <ImportedButton onClick={this.checkAnswer} value={this.props.triviaArray[currentIndex].option2} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"d-flex justify-content-around\">\r\n                                <ImportedButton onClick={this.checkAnswer} value={this.props.triviaArray[currentIndex].option3} />\r\n                                <ImportedButton onClick={this.checkAnswer} value={this.props.triviaArray[currentIndex].option4} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    render() {\r\n        return this.state.playActive ? <this.playArea /> : <this.finalScore />;\r\n    }\r\n    // TIMER\r\n    componentDidMount() {\r\n        // this.resetGame();\r\n        this.myInterval = setInterval(() => {\r\n            this.setState(prevState => ({\r\n                timer: prevState.timer - 1\r\n            }))\r\n            if (this.state.timer === 0) {\r\n                this.nextQuestion();\r\n            }\r\n        }, 1000)\r\n    }\r\n}\r\n\r\nexport default TriviaBoard;","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\ImportedButton\\ImportedButton.js",[],"D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\questions\\questions.js",[],"D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\MainMenu\\MainMenu.js",["59","60","61"],"import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport MainMenuBtn from '../MainMenuBtn/MainMenuBtn'\r\nimport TriviaBoard from '../TriviaBoard/TriviaBoard';\r\nimport Options from '../Options/Options'\r\nimport '../../styles.css'\r\n\r\n// function MainMenu() {\r\nclass MainMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            difficulty: \"\",\r\n            gameArray: [],\r\n        }\r\n    }\r\n    resetBtns = () => {\r\n        this.setState({\r\n            difficulty: \"\",\r\n            \r\n        })\r\n    }\r\n    setDifficulty = (diff, arr) => {\r\n        console.log(diff, arr)\r\n        // if (this.state.difficulty !== \"\") {\r\n\r\n        // }\r\n        this.setState({\r\n            difficulty: diff,\r\n            gameArray: arr\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        window.location.reload(false);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-center pt-5 title\">\r\n                            Trivi..ahaha\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Container fluid className=\"\">\r\n                    <Row>\r\n                        <Router>\r\n                            <Col xs={2}>\r\n                                {/* 1 > 0 ? console.log(true) : console.log(else)\r\n                                1 > 0 && console.log(true) */}\r\n                                {this.state.difficulty === \"\" &&\r\n                                    <>\r\n                                        <Row className=\"d-flex justify-content-center align-items-center optionsBG subtitle\">\r\n                                            <p>Set Difficulty</p>\r\n                                        </Row>\r\n                                        <Row className=\"d-flex justify-content-center align-items-center optionsBG\">\r\n                                            \r\n                                                <MainMenuBtn onClick={this.setDifficulty} choice={\"Easy\"} />\r\n                                                <MainMenuBtn onClick={this.setDifficulty} choice={\"Medium\"} />\r\n                                                <MainMenuBtn onClick={this.setDifficulty} choice={\"Hard\"} />\r\n                                            \r\n                                        </Row>\r\n                                    </>\r\n                                }\r\n\r\n                            </Col>\r\n                            <Col xs={8}>\r\n                                {/* <Switch>\r\n                                    <Route path=\"/TriviaBoard\"> */}\r\n                                    {this.state.difficulty !== \"\" &&\r\n                                        <>\r\n                                            <TriviaBoard difficulty={this.state.difficulty} triviaArray={this.state.gameArray} gameEnd={this.resetBtns} />\r\n\r\n                                        </>\r\n                                    }\r\n                                    {/* </Route>\r\n                                </Switch> */}\r\n                            </Col>\r\n                        </Router>\r\n                        <Col xs={2} className=\"d-flex justify-content-center\">\r\n                            <Options reload={this.handleClick} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-end pt-4 credits\">\r\n                            Created By: Adrian Segura\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default MainMenu;","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\MainMenuBtn\\MainMenuBtn.js",["62"],"import { Questions, MediumQuestions, HardQuestions} from '../questions/questions'\r\nimport ImportedButton from '../ImportedButton/ImportedButton'\r\n\r\nconst MainMenuBtn = (importProps) => {\r\n    const handleClick = (props) => {\r\n        let randomQuestions;\r\n        let selectedQuestions;\r\n\r\n        switch(props) {\r\n            case\"Easy\":\r\n            randomQuestions = Questions.sort(() => Math.random() - 0.5);\r\n            selectedQuestions = randomQuestions.splice(0,20);\r\n            break;\r\n            case\"Medium\":\r\n            randomQuestions = MediumQuestions.sort(() => Math.random() - 0.5);\r\n            selectedQuestions = randomQuestions.splice(0,20);\r\n            break;\r\n            case\"Hard\":\r\n            randomQuestions = HardQuestions.sort(() => Math.random() - 0.5);\r\n            selectedQuestions = randomQuestions.splice(0,20);\r\n            default:\r\n            break;\r\n        }\r\n        importProps.onClick(props, selectedQuestions);\r\n    }\r\n    return (\r\n        <>\r\n            <ImportedButton className=\"diffBtn\" onClick={handleClick} value={importProps.choice}/>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default MainMenuBtn;","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\Options\\Options.js",["63"],"import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport Music from '../songs/ItsChronic.mp3';\r\nimport Clock from '../Clock/Clock'\r\nimport ImportedButton from '../ImportedButton/ImportedButton';\r\nimport StartOver from '../StartOver/StartOver'\r\n\r\n\r\nclass MusicPlayer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            refresh: props.reload\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container className=\"optionsBG\">\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-center subtitle\">\r\n                            <h3>Options</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-center py-5 my-5\">\r\n                            <StartOver onClick={this.state.refresh}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-center mr-n3\">\r\n                        <ReactAudioPlayer\r\n                        src={Music}\r\n                        autoPlay\r\n                        controls\r\n                    />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-center py-5 my-5\">\r\n                            <Clock />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MusicPlayer;","D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\Clock\\Clock.js",[],"D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\EndGame\\EndGame.js",[],["64","65"],"D:\\Users\\asegu\\Desktop\\Level 2\\WorkSpace\\React-Trivia\\src\\components\\StartOver\\StartOver.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":31,"column":24,"nodeType":"72","endLine":31,"endColumn":34},{"ruleId":"73","severity":1,"message":"74","line":5,"column":5,"nodeType":"75","messageId":"76","endLine":5,"endColumn":11},{"ruleId":"73","severity":1,"message":"77","line":6,"column":5,"nodeType":"75","messageId":"76","endLine":6,"endColumn":10},{"ruleId":"73","severity":1,"message":"78","line":7,"column":5,"nodeType":"75","messageId":"76","endLine":7,"endColumn":9},{"ruleId":"79","severity":1,"message":"80","line":21,"column":13,"nodeType":"81","messageId":"82","endLine":22,"endColumn":19},{"ruleId":"73","severity":1,"message":"83","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":22},{"ruleId":"66","replacedBy":"84"},{"ruleId":"68","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'ImportedButton' is defined but never used.",["86"],["87"],"no-global-assign","no-unsafe-negation"]